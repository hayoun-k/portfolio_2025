---
import { Icon } from "astro-icon/components";
---
<section class="form-container">
  <button aria-label="contact button" id="open">
    <Icon name="mdi:comment-question-outline" />
  </button>
  <dialog id="dialog">
    <button id="close">
      <Icon name="mdi:close" />
    </button>
    <h2>Let's talk!</h2>
    <form action="https://contact-form-worker.hayoun-k-1102.workers.dev" method="post" id="contactForm">
      <label>
        Name:
        <input type="text" name="name" id="name" required autocomplete="off">
      </label>
      <label>
        Email:
        <input type="email" name="email" id="email" required autocomplete="email">
      </label>
      <label >
        Message:
        <textarea name="message" id="message" required></textarea>
      </label>
      <div id="turnstile-container"></div>
      <button type="submit" id="sendBtn" >Send</button>
    </form>
  </dialog>
</section>
<script src="./FormControl.js"></script>
<script is:inline>

  let turnstileWidgetId = null;

window.onloadTurnstileCallback = function() {
  console.log('onloadTurnstileCallback called');

  turnstileWidgetId = turnstile.render('#turnstile-container', {
    sitekey: '0x4AAAAAABg50lIh3WdShTJl',
    theme: 'light',
    callback: function(token) {
      console.log('Turnstile solved:', token);
      // Enable submit button when turnsile is completed
      const submitBtn = document.getElementById("sendBtn");
      if (submitBtn) {
        submitBtn.disabled = false;
      }
    },
    'error-callback': function() {
      console.error('Turnstile error occured');
      showFormMessage('Captcha error occurred. Please try again.', 'error');
    },
    'expired-callback': function() {
      console.log('Turnstile token expired');
      showFormMessage('Captcha expired. Please try again.', 'warning');
      const submitBtn = document.getElementById("sendBtn");
      if (submitBtn) {
        submitBtn.disabled = true;
      }
    }
  });
};

  // console.log('üîß Setting up Turnstile callback...');
  
  // window.onloadTurnstileCallback = function() {
  //   console.log('üéØ Turnstile callback triggered!');
    
  //   const container = document.getElementById('turnstile-container');
  //   console.log('üì¶ Container found:', container);
    
  //   if (!container) {
  //     console.error('‚ùå No turnstile-container found');
  //     return;
  //   }
    
  //   if (typeof turnstile === 'undefined') {
  //     console.error('‚ùå Turnstile not loaded');
  //     return;
  //   }
    
  //   console.log('‚úÖ Rendering Turnstile...');
    
  //   window.turnstileWidgetId = turnstile.render('#turnstile-container', {
  //     sitekey: '0x4AAAAAABg50lIh3WdShTJl',
  //     theme: 'light',
  //     callback: function(token) {
  //       console.log('‚úÖ Turnstile solved!');
  //     }
  //   });
  // };
</script>
<script type="module">
  function initializeDialog() {
    const contactDialog = document.getElementById("dialog");
    const openButton = document.getElementById("open");
    const closeButton = document.getElementById("close");
    
    if (!contactDialog || !openButton || !closeButton) {
      console.warn('Dialog elements not found');
      return;
    }

    openButton.addEventListener("click", () => {
      contactDialog.showModal();
    });

    closeButton.addEventListener("click", () => {
      contactDialog.close();
    });
  }
  
  // Run when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeDialog);
  } else {
    initializeDialog();
  }
</script>
<script
  src="https://challenges.cloudflare.com/turnstile/v0/api.js?onload=onloadTurnstileCallback"
  is:inline
></script>


<style>
  .form-container {
    position: fixed;
    bottom: 0;
    right: 0;
  }

  button {
    background-color: rgb(235,235,235);
    font-size: 20px;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  #close {
    font-size: 24px;
    color: rgb(235,235,235);
    background-color: hsl(0 0% 13%);
    border: none;
  }

  h2 {
    margin-bottom: 0.5em;
    line-height: 1.6;
    color: rgb(235,235,235);
    text-align: center;
  }

  #open {
    margin-bottom: 24px;
    margin-left: auto;
    margin-right: 24px;
    padding: 8px;
    color: rgb(235,235,235);
    border-radius: 50px;
    border: 2px solid rgb(235,235,235);
    background-color: hsl(0 0% 13%);
    transition: all ease-in-out 0.1s;
  }

  #open:hover,
  #open:focus {
    color: hsl(0 0% 23%);
    border-color: hsl(0 0% 23%);
    background-color: rgb(235,235,235);
  }

  dialog {
    margin: auto;
    padding: 50px;
    position: fixed;
    /* inset: 0; */
    background-color: hsl(0 0% 13%);
  }

  dialog::backdrop {
    background-color: hsl(0 0% 13% / 0.7);
  }

  #close {
    justify-self: end;
  }

  dialog form {
    min-width: 240px;
    display: flex;
    flex-direction: column;
    gap: 24px;
    color: rgb(235,235,235);
    background-color: hsl(0 0% 13%);
  }

  form label {
    display: flex;
    flex-direction: column;
  }

  form :is(input, textarea) {
    padding-block: 3px;
    border: none;
    border-radius: 5px;
  }

  #message {
    min-height: 64px;
  }

  #submit {
    width: fit-content;
    margin-inline: auto;
    padding: 8px 16px;
    border: none;
    border-radius: 5px;
    transition: all ease-in-out 0.1s;
  }

  #submit:hover,
  #submit:focus {
    color: rgb(235,235,235);
    background-color: hsl(0 0% 23%);
  }

  .recaptcha-tos {
    margin-top: 1em;
    max-width: 240px;
    font-size: 0.7rem;
    color: rgb(135, 135, 135);
  }

  /* form */
  .form-message {
  padding: 12px 16px;
  border-radius: 8px;
  margin-bottom: 16px;
  font-size: 14px;
  line-height: 1.4;
  border: 1px solid;
  animation: slideIn 0.3s ease-out;
}

.form-message--success {
  background-color: #d4edda;
  color: #155724;
  border-color: #c3e6cb;
}

.form-message--error {
  background-color: #f8d7da;
  color: #721c24;
  border-color: #f5c6cb;
}

.form-message--warning {
  background-color: #fff3cd;
  color: #856404;
  border-color: #ffeaa7;
}

.form-message--info {
  background-color: #d1ecf1;
  color: #0c5460;
  border-color: #bee5eb;
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Update submit button styles */
#sendBtn:disabled {
  background-color: #6c757d !important;
  cursor: not-allowed;
  opacity: 0.65;
}

#sendBtn:disabled:hover {
  background-color: #6c757d !important;
}

/* Loading state for submit button */
#sendBtn.loading {
  position: relative;
  color: transparent;
}

#sendBtn.loading::after {
  content: "";
  position: absolute;
  width: 16px;
  height: 16px;
  top: 50%;
  left: 50%;
  margin-left: -8px;
  margin-top: -8px;
  border: 2px solid #ffffff;
  border-radius: 50%;
  border-top-color: transparent;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
</style>